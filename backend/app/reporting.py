def generate_report(audio_path, results):
    import hashlib, datetime, os, json, qrcode
    from fpdf import FPDF

    # Directories
    JSON_DIR = "json_reports"
    PDF_DIR = "pdf_reports"
    QR_DIR = "qr_codes"
    for d in [JSON_DIR, PDF_DIR, QR_DIR]:
        if not os.path.exists(d):
            os.makedirs(d)

    file_name = os.path.basename(audio_path)
    report_id = results["report_id"]

    # --- Enhanced JSON Report ---
    json_report = {
        "report_id": report_id,
        "file_name": file_name,
        "date": datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S"),
        "final_verdict": results.get("final_verdict", ""),
        "md5_hash": hashlib.md5(open(audio_path, "rb").read()).hexdigest(),
        "audio_metadata": results.get("audio_metadata", {}),
        "tool_used": results.get("tool_used", []),
        "average_deepfake_score": results.get("average_deepfake_score", None),
        "average_genuine_score": results.get("average_genuine_score", None),  # Added
        "device_used": results.get("device_used", ""),
        "chunks_analyzed": results.get("chunks_analyzed", 0),
    }

    json_path = os.path.join(JSON_DIR, f"{report_id}.json")
    with open(json_path, "w", encoding="utf-8") as f:
        json.dump(json_report, f, indent=4, ensure_ascii=False)

    # --- Official PDF Report ---
    pdf = FPDF()
    pdf.add_page()

    # Header
    pdf.set_font("Arial", "B", 20)
    pdf.set_text_color(0, 51, 102)
    pdf.cell(0, 15, "Prison Voice Forensics Bureau", ln=True, align="C")
    pdf.set_font("Arial", "B", 14)
    pdf.set_text_color(0, 0, 0)
    pdf.cell(0, 10, "Deepfake Audio Analysis Report", ln=True, align="C")
    pdf.ln(2)
    pdf.set_draw_color(0, 51, 102)
    pdf.set_line_width(0.5)
    pdf.line(10, pdf.get_y(), 200, pdf.get_y())
    pdf.ln(5)

    # Metadata Section
    pdf.set_font("Arial", "B", 12)
    pdf.cell(0, 8, "Report Details", ln=True)
    pdf.set_font("Arial", "", 11)
    pdf.cell(0, 7, f"Report ID: {report_id}", ln=True)
    pdf.cell(
        0, 7, f"Date: {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", ln=True
    )
    pdf.cell(0, 7, f"Analyzed By: Automated AI Tool", ln=True)
    pdf.cell(0, 7, f"Audio File: {file_name}", ln=True)
    pdf.cell(0, 7, f"MD5 Hash: {json_report['md5_hash']}", ln=True)
    pdf.cell(0, 7, f"Device Used: {json_report['device_used']}", ln=True)
    pdf.cell(
        0,
        7,
        f"Average Deepfake Score: {json_report['average_deepfake_score']}",
        ln=True,
    )
    pdf.cell(
        0, 7, f"Average Genuine Score: {json_report['average_genuine_score']}", ln=True
    )  # Added
    pdf.cell(0, 7, f"Chunks Analyzed: {json_report['chunks_analyzed']}", ln=True)
    pdf.ln(5)
    pdf.set_draw_color(200, 200, 200)
    pdf.set_line_width(0.2)
    pdf.line(10, pdf.get_y(), 200, pdf.get_y())
    pdf.ln(5)

    # Audio Metadata Section
    pdf.set_font("Arial", "B", 12)
    pdf.cell(0, 8, "Audio Metadata", ln=True)
    pdf.set_font("Arial", "", 11)
    for k, v in json_report["audio_metadata"].items():
        pdf.cell(0, 7, f"{k.replace('_',' ').title()}: {v}", ln=True)
    pdf.ln(5)
    pdf.set_draw_color(200, 200, 200)
    pdf.line(10, pdf.get_y(), 200, pdf.get_y())
    pdf.ln(5)

    # Final Verdict Section
    pdf.set_font("Arial", "B", 13)
    pdf.set_text_color(220, 50, 50)
    pdf.cell(
        0, 10, f"Final Verdict: {results.get('final_verdict','')}", ln=True, align="C"
    )
    pdf.set_text_color(0, 0, 0)
    pdf.ln(5)
    pdf.set_draw_color(200, 200, 200)
    pdf.line(10, pdf.get_y(), 200, pdf.get_y())
    pdf.ln(5)

    # QR Code Section
    pdf.set_font("Arial", "B", 12)
    pdf.cell(0, 8, "Report QR Code", ln=True)
    qr = qrcode.QRCode(box_size=3, border=2)
    qr.add_data(report_id)
    qr.make(fit=True)
    img_qr = qr.make_image(fill_color="black", back_color="white")
    qr_path = os.path.join(QR_DIR, f"{report_id}.png")
    img_qr.save(qr_path)
    pdf.image(qr_path, x=80, w=40)
    pdf.ln(10)

    # Footer
    pdf.set_y(-30)
    pdf.set_font("Arial", "I", 9)
    pdf.set_text_color(100, 100, 100)
    pdf.cell(
        0,
        8,
        "This is an official forensic report generated by Prison Voice Forensics Bureau.",
        ln=True,
        align="C",
    )
    pdf.cell(
        0,
        8,
        "For internal use only. Contact bureau for verification.",
        ln=True,
        align="C",
    )
    pdf.cell(0, 8, f"Page {pdf.page_no()}", align="C")

    # Save PDF
    pdf_path = os.path.join(PDF_DIR, f"{report_id}.pdf")
    pdf.output(pdf_path)

    return {"json_report": json_path, "pdf_report": pdf_path}
